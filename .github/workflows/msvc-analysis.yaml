name: Microsoft C++ Code Analysis

on: [ pull_request, workflow_dispatch ]


permissions:
  contents: read

jobs:
  analyze:
    env:
      # Path to the CMake build directory.
      CONFIG_DIR: '${{ github.workspace }}/out/${{ matrix.cmake_preset }}'

    permissions:
      contents: read         # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results

    name: ${{ matrix.cmake_preset }} Analyze
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest ]
        cmake_preset: [ debug, release ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure CMake
        uses: lukka/run-cmake@v10
        env:
          VCPKG_ROOT: "C:\\vcpkg"
        with:
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          configurePreset: ${{ matrix.cmake_preset }}

      - name: Initialize MSVC Code Analysis
        uses: microsoft/msvc-code-analysis-action@04825f6d9e00f87422d6bf04e1a38b1f3ed60d99
        # Provide a unique ID to access the sarif output path
        id: run-analysis
        with:
          cmakeBuildDirectory: ${{ env.CONFIG_DIR }}
          # Ruleset file that will determine what checks will be run
          ruleset: NativeRecommendedRules.ruleset

      # Upload SARIF file to GitHub Code Scanning Alerts
      - name: Upload SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.run-analysis.outputs.sarif }}

      # Upload SARIF file as an Artifact to download and view
      - name: Upload SARIF as an Artifact
        uses: actions/upload-artifact@v3
        with:
          name: sarif-file
          path: ${{ steps.run-analysis.outputs.sarif }}